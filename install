#!/usr/bin/env bash
set -e

# ~/.dotfiles/install
# dotfiles -- Personal dotfile repo
# Author: Blake Jakopovic
# Git:    https://github.com/blakejakopovic/dotfiles

echo ".dotfiles Installer - vALPHA"

# Global variables
export DOTFILESPATH="${HOME}/.dotfiles"
export DIR_CMD='mkdir -p'
export LINK_CMD='ln -sTi'
export PADDING='     '

# Parse arguments
for i in "$@"
do
case $i in
    -f|--force)
    # Enable force creation of symlinks (destructive)
    export LINK_CMD='ln -sTf'
    ;;
esac
done

# Register directory to be created
# NB. Path is relative to HOME (~/)
# Usage:
#   r_directory <dir>
# Example:
#   r_directory my/path
r_dir() {
  dir=$1
  echo "${PADDING}d  ${dir}"
  eval "${DIR_CMD} '${HOME}/${dir}'"
}
export -f r_dir

# Register symlink with to and from values
# If second argument is missing, it will mirror the first
# NB. dst path is relative to HOME (~/)
#     src path is relative to DOTFILESPATH (~/.dotfiles)
# Usage:
#   r_symlink <src>
#   r_symlink <dst> <src>
# Examples:
#   r_symlink .custom
#   r_symlink .custom osx/custom.conf
function r_symlink() {
  dst=$1; src=$2
  [ -z "$src" ] && src="$dst"
  echo "${PADDING}l  ~/${dst} -> ${DOTFILESPATH}/${src}"
  eval "${LINK_CMD} '${DOTFILESPATH}/${src}' '${HOME}/${dst}'"
}
export -f r_symlink

echo "==> Installing shared dotfiles..."

# Ensure required paths
r_dir .config/mpv
r_dir .gnupg

# Symlink directories
r_symlink .git_hooks

# Symlink config files
r_symlink .config/mpv/mpv.conf mpv.conf
r_symlink .gnupg/gpg.conf gpg.conf

# Symlink shared dotfiles
r_symlink .bashrc
r_symlink .bash_profile
r_symlink .curlrc
r_symlink .gemrc
r_symlink .gitconfig
r_symlink .gitignore_global
r_symlink .gituserconfig
r_symlink .hushlogin
r_symlink .nanorc
r_symlink .screenrc
r_symlink .tmuxrc
r_symlink .vimrc
r_symlink .wgetrc
r_symlink .zshrc

# Install operating system specific dotfiles
declare -a os_dotfiles
[[ `uname -s` == "Darwin" ]] && os_dotfiles+=("${DOTFILESPATH}/osx/install")
[[ `uname -s` == "Linux"  ]] && os_dotfiles+=("${DOTFILESPATH}/linux/install")
[[ -f "/etc/arch-release" ]] && os_dotfiles+=("${DOTFILESPATH}/arch/install")
[[ -f "/etc/debian-version" ]] && os_dotfiles+=("${DOTFILESPATH}/debian/install")
[[ -f "/etc/redhat-release" ]] && os_dotfiles+=("${DOTFILESPATH}/redhat/install")

for installer in ${os_dotfiles[@]}; do
  [ -r "${installer}" ] && [ -f "${installer}" ] && source "${installer}"
done

# Remind users to customise example files
echo "==> Reminders"
echo "${PADDING}Dont forget to edit .gituserconfig and .private as needed"
echo "${PADDING}$ cp -i ~/.dotfiles/.gituserconfig{.example,}"
echo "${PADDING}$ cp -i ~/.dotfiles/.private{.example,}"

# Fin
echo "Fin :)"
exit 0
